[buildout]
extensions = buildout.dumppickedversions
dump-picked-versions-file = versions-picked.cfg

parts =
    psycopg2
    mx-base
    getpaid
    products-dist
    zope2
    instance01
    zopepy
    PILwoTK
    zpsycopg
    localfs
    mailmansubform
    omelette
    scripts
    test

extends = http://dist.plone.org/release/3.3.1/versions.cfg
          versions.cfg
versions = versions

index = http://pypi.affinitic.be
allow-hosts = pypi.affinitic.be
              eggs.affinitic.be
              packages.affinitic.be
              getpaid.googlecode.com
              download.zope.org
              svn.kmrc.de
find-links =
        http://packages.affinitic.be/simple
        http://eggs.affinitic.be/
        http://getpaid.googlecode.com
        http://svn.kmrc.de/download/distribution/contrib/

develop =
    src/gites.calendar
    src/gites.skin
    src/gites.core
    src/gites.db
    src/gites.ldap
    src/gites.imports
    src/bnbelgium.skin
    src/megrok.z3cform.base
    src/five.megrok.z3cform
    src/gites.ldapimport

eggs =
    PILwoTK
    Products.LinguaPlone
    psycopg2
    gites.skin
    gites.ldap
    gites.core
    gites.calendar
    gites.db
    gites.imports
    megrok.z3cform.base
    ipdb
    z3c.amf
    z3c.jbot
    bnbelgium.skin
    five.grok
    collective.editskinswitcher
    p4a.calendar
    p4a.plonecalendar
    p4a.ploneevent
    zc.datetimewidget
    plone.z3cform
    five.megrok.z3cform
    collective.z3cform.datepicker
    plone.app.z3cform
    zope.schema
    zope.app.testing

unzip = true
zcml =
    zope.app.schema-meta
    five.grok-meta
    five.grok
    megrok.z3cform.base-meta
    megrok.z3cform.base
    five.megrok.z3cform-meta
    five.megrok.z3cform
    gites.skin
    gites.db
    gites.ldap
    gites.core
    gites.calendar-overrides
    gites.calendar
    gites.imports
    affinitic.pwmanager
    z3c.amf
    z3c.form-meta
    z3c.form
    Products.LinguaPlone
    bnbelgium.skin
    collective.editskinswitcher
    p4a.calendar
    p4a.plonecalendar-meta
    p4a.plonecalendar
    p4a.ploneevent
    z3c.amf
    z3c.amf-meta
    plone.z3cform
    plone.z3cform-overrides
    plone.app.z3cform
    Products.PloneZCdatetimewidget-overrides
    Products.PloneZCdatetimewidget
    collective.z3cform.datepicker

products =
    ${buildout:directory}/parts/products-dist
    ${buildout:directory}/parts/zpsycopg
    ${buildout:directory}/parts/localfs
    ${buildout:directory}/parts/mailmansubform

[getpaid]
recipe = getpaid.recipe.release
eggs = simplejson
addpackages=
    getpaid.ogone

[zope2]
recipe = plone.recipe.zope2install
url = http://www.zope.org/Products/Zope/2.11.6/Zope-2.11.6-final.tgz
fake-zope-eggs = true
skip-fake-eggs = zope.testing
                 zope.configuration
                 zope.component
                 zope.schema
                 zope.location
                 zope.app.pagetemplate
                 zope.app.testing
                 zope.security
                 zope.i18n
                 zope.i18nmessageid
additional-fake-eggs =
    zope.location = 3.4
    zope.proxy = 3.4

[mx-base]
recipe = collective.recipe.mxbase

[psycopg2]
recipe = zc.recipe.egg:custom
egg = psycopg2
find-links = http://eggs.affinitic.be/psycopg2-2.0.6.tar.gz
define = PSYCOPG_EXTENSIONS,PSYCOPG_DISPLAY_SIZE,PSYCOPG_NEW_BOOLEAN,HAVE_PQFREEMEM,HAVE_PQPROTOCOL3
include-dirs = /usr/include
library-dirs = /usr/lib
rpath = /usr/lib

[PILwoTK]
recipe = zc.recipe.egg
find-links =
    http://download.zope.org/distribution/

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance01:eggs}
products = ${instance01:products}
packages = ${zope2:location}/lib/python ./

[products-dist]
recipe = plone.recipe.distros
urls =
    http://eggs.affinitic.be/PloneZCdatetimewidget.tar

[instance01]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
verbose-security = on
environment-vars =
    PTS_LANGUAGES fr en nl it de
http-address = 5080
ftp-address = 5021
debug-mode = on
zcml = ${buildout:zcml}
products = ${buildout:products}
eggs =
    ${buildout:eggs}
    ${getpaid:eggs}
    zope.component
    zope.interface
    zope.app.pagetemplate
    zope.testing
    Plone
zcml-additional =
 <configure xmlns="http://namespaces.zope.org/zope"
            xmlns:passmgr="http://affinitic.be/passmgr">
    <passmgr:pwdfile name="pg"
             filename="pgpass"/>
 </configure>

[zpsycopg]
recipe = infrae.subversion
urls =
    http://svn.affinitic.be/zope/ZPsycopgDA ZPsycopgDA

[localfs]
recipe = infrae.subversion
urls =
    http://svn.affinitic.be/zope/LocalFS LocalFS

[mailmansubform]
recipe = infrae.subversion
urls =
    http://svn.plone.org/svn/collective/MailmanSubForm/trunk MailmanSubForm

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance01:eggs}
interpreter = zopepy
extra-paths = ${zope2:location}/lib/python
scripts = zopepy

[scripts]
recipe = zc.recipe.egg:scripts
extra-paths = ${zope2:location}/lib/python
eggs = zope.interface
       ipdb
       gites.ldapimport
       gites.calendar

[test]
recipe = zc.recipe.testrunner
extra-paths = ${zope2:location}/lib/python
eggs = gites.ldapimport
       gites.calendar
       gites.imports
       PILwoTK
       ipdb
