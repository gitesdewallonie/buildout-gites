[buildout]
extends =
    base.cfg
    versions_prod.cfg
versions = versions
parts +=
    instance01
    instance02
    supervisor
    supervisord-conf
    logrotate.conf
    sleep

[instance01]
recipe = plone.recipe.zope2instance
debug-mode = off
verbose-security = off
zeo-client = True
zeo-address = ${zeo:zeo-address}
effective-user = plone
user = admin:admin
http-address = 0.0.0.0:${port:instance1}
zserver-threads = 2
environment-vars =
    PTS_LANGUAGES fr en nl it de
eggs =
    ${buildout:eggs}
zcml = ${buildout:zcml}
products = ${buildout:products}
zodb-cache-size = 8000
zeo-client-cache-size = 100MB

[instance02]
recipe = ${instance01:recipe}
debug-mode = ${instance01:debug-mode}
verbose-security = ${instance01:verbose-security}
environment-vars = ${instance01:environment-vars}
zeo-client = ${instance01:zeo-client}
zeo-address = ${instance01:zeo-address}
effective-user = ${instance01:effective-user}
user = ${instance01:user}
http-address = 0.0.0.0:${port:instance2}
zserver-threads = ${instance01:zserver-threads}
eggs = ${instance01:eggs}
zcml = ${instance01:zcml}
products = ${instance01:products}
zodb-cache-size = ${instance01:zodb-cache-size}
zeo-client-cache-size = ${instance01:zeo-client-cache-size}
zcml-additional = ${instance01:zcml-additional}

[supervisor]
recipe = collective.recipe.supervisor
supervisord-conf = ${buildout:directory}/etc/supervisord.conf

[zeo]
recipe = plone.recipe.zeoserver
zeo-address = 0.0.0.0:${port:zeo}
zeo-conf-additional =

[supervisord-conf]
recipe = collective.recipe.template
input = templates/supervisord.conf
output = ${buildout:directory}/etc/supervisord.conf

[sleep]
recipe = zc.recipe.egg
eggs = zc.recipe.egg
initialization =
    import sys, time
    time.sleep(float(sys.argv[1]))
arguments = sys.argv[2], sys.argv[2:]
entry-points = sleep=os:execvp

[logrotate.conf]
recipe = zc.recipe.deployment:configuration
text =
    rotate 360
    daily
    create
    compress
    delaycompress
    dateext

    ${buildout:directory}/var/log/instance01*.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance01.pid)
        endscript
    }

    ${buildout:directory}/var/log/instance02*.log {
        sharedscripts
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/instance02.pid)
        endscript
    }

    ${buildout:directory}/var/log/zeo.log {
        postrotate
            /bin/kill -USR2 $(cat ${buildout:directory}/var/zeo.pid)
        endscript
    }
